#!/bin/sh

# Configure directories
build_dir=$1
cache_dir=$2
env_dir=$3
bp_dir=$(cd $(dirname $0); cd ..; pwd)
heroku_dir=$build_dir/.heroku
mkdir -p $heroku_dir/node
warnings=$(mktemp)

# Load Dependencies
source common = $bp_dir/lib/common.sh
source node_build = $bp_dir/lib/node-build.sh

if [ "$iojs_engine" == "" ]; then
  warn_node_engine "$node_engine"
else
  warn_node_engine "$iojs_engine"
fi
warn_node_modules "$modules_source"

####### Vendor in binaries

head "Installing binaries"
if [ "$iojs_engine" == "" ]; then
  install_node "$node_engine"
else
  install_iojs "$iojs_engine"
fi
install_npm

####### Build the project's dependencies

head "Building dependencies"
cd $build_dir
build_dependencies

####### Create a Procfile if possible

head "Checking startup method"
ensure_procfile "$start_method" "$build_dir"
warn_start "$start_method"

####### Finalize the build

head "Finalizing build"
write_profile
write_export
clean_npm
clean_cache
create_cache
build_succeeded

(
  if [ -f $build_dir/gulpfile.js ]; then
    
    # get the env vars
    if [ -d "$env_dir" ]; then
      status "Exporting config vars to environment"
      export_env_dir $env_dir
    fi

    # Install gulp locally
    npm install gulp
    echo "-----> Found gulpfile, running gulp default task"
    # Run Gulp
    $build_dir/node_modules/.bin/gulp

    source clojure_build = $bp_dir/lib/clojure-build.sh
  else
    echo "-----> No gulpfile found"
  fi
)





